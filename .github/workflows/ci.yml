name: CI/CD パイプライン

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'lambapi/**'
      - 'examples/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'setup.py'
      - '.github/workflows/ci.yml'
  schedule:
    # 毎週日曜日 9:00 JST (日曜日 00:00 UTC) に実行
    - cron: '0 0 * * 0'

jobs:
  lint:
    name: コード品質チェック
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリチェックアウト
        uses: actions/checkout@v4

      - name: Python 環境セットアップ
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: 開発ツールインストール
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Black フォーマットチェック
        run: black --check --diff .

      - name: Flake8 リントチェック
        run: flake8 .

      - name: MyPy 型チェック
        run: mypy lambapi/

  test:
    name: テストスイート
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
        
    steps:
      - name: リポジトリチェックアウト
        uses: actions/checkout@v4

      - name: Python ${{ matrix.python-version }} セットアップ
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: 依存関係インストール
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: テストスイート実行
        run: |
          pytest tests/ -v --cov=lambapi --cov-report=xml --cov-report=term-missing

      - name: カバレッジデータアップロード
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}
          path: |
            coverage.xml
            .coverage
          retention-days: 7

  coverage:
    name: カバレッジ解析
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
      - name: リポジトリチェックアウト
        uses: actions/checkout@v4

      - name: Python 環境セットアップ
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: カバレッジツールインストール
        run: |
          python -m pip install --upgrade pip
          pip install coverage[toml] pytest-cov

      - name: カバレッジデータダウンロード
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: カバレッジレポート生成
        run: |
          # カバレッジファイルを確認
          echo "=== カバレッジファイル一覧 ==="
          ls -la .coverage* || echo "No .coverage files found"
          ls -la coverage.xml || echo "No coverage.xml files found"
          echo "=== カバレッジファイルを結合 ==="
          if ls .coverage* 1> /dev/null 2>&1; then
            coverage combine
            coverage report --show-missing
            coverage html
          else
            echo "No .coverage files to combine, skipping coverage report generation"
          fi

      - name: カバレッジレポートアップロード
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-report
          path: htmlcov/
          retention-days: 30

  validate:
    name: 検証ゲート
    runs-on: ubuntu-latest
    needs: [lint, test, coverage]
    if: always()
    
    steps:
      - name: 全ジョブステータス確認
        uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: coverage
          jobs: ${{ toJSON(needs) }}

  security-scan:
    name: セキュリティ解析
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    
    steps:
      - name: リポジトリチェックアウト
        uses: actions/checkout@v4

      - name: Python 環境セットアップ
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: セキュリティツールインストール
        run: |
          python -m pip install --upgrade pip
          pip install bandit[toml] safety

      - name: Bandit セキュリティスキャン
        run: |
          bandit -r lambapi/ -f json -o bandit-report.json || true
          bandit -r lambapi/ -f txt

      - name: 依存関係セキュリティチェック
        run: |
          pip freeze > requirements-freeze.txt
          safety check --file requirements-freeze.txt --json --output safety-report.json || true
          safety check --file requirements-freeze.txt

      - name: セキュリティレポートアップロード
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json
          retention-days: 30